/*
 * Copyright 2023 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(ldpc_encoder.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(7f976e74d2e780f280f5ae29aebc4601)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/ldpc_toolbox/ldpc_encoder.h>
// pydoc.h is automatically generated in the build directory
#include <ldpc_encoder_pydoc.h>

void bind_ldpc_encoder(py::module& m)
{

    using ldpc_encoder = ::gr::ldpc_toolbox::ldpc_encoder;


    py::class_<ldpc_encoder,
               gr::sync_block,
               gr::block,
               gr::basic_block,
               std::shared_ptr<ldpc_encoder>>(m, "ldpc_encoder", D(ldpc_encoder))

        .def(py::init(&ldpc_encoder::make),
             py::arg("alist"),
             py::arg("puncturing"),
             py::arg("n"),
             py::arg("k"),
             D(ldpc_encoder, make))


        ;
}
