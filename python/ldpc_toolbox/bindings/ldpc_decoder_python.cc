/*
 * Copyright 2023 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(ldpc_decoder.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(3ab6d9b8b9449b7a2cd786f3282b02b6)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/ldpc_toolbox/ldpc_decoder.h>
// pydoc.h is automatically generated in the build directory
#include <ldpc_decoder_pydoc.h>

void bind_ldpc_decoder(py::module& m)
{

    using ldpc_decoder = ::gr::ldpc_toolbox::ldpc_decoder;


    py::class_<ldpc_decoder, gr::block, gr::basic_block, std::shared_ptr<ldpc_decoder>>(
        m, "ldpc_decoder", D(ldpc_decoder))

        .def(py::init(&ldpc_decoder::make),
             py::arg("alist"),
             py::arg("implementation"),
             py::arg("puncturing"),
             py::arg("n"),
             py::arg("k"),
             py::arg("max_iterations"),
             D(ldpc_decoder, make))


        ;
}
